<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>manue1&#39;s site</title>
    <link>http://www.manue1.site/</link>
    <description>^_^ just for simaple</description>
    <pubDate>Sun, 03 Jun 2018 22:17:06 CST</pubDate>
    <lastBuildDate>Sun, 03 Jun 2018 22:17:06 CST</lastBuildDate>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>Org-page static site generator (https://github.com/kelvinh/org-page)</generator>
    <item>
      <title>note-linux-centos-集群部署</title>
      <link>http://www.manue1.site/blog/2017/06/03/note-linux-centos-集群部署</link>
      <description><![CDATA[vbox搭建集群开发环境]]></description>
      <pubDate>2018-06-03</pubDate>
      <guid>http://www.manue1.site/blog/2017/06/03/note-linux-centos-集群部署</guid>
    </item>
    <item>
      <title>Untitled</title>
      <link>http://www.manue1.site/wiki/untitled/</link>
      <description><![CDATA[<div>
<div class="post">
<h1>Untitled</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#orgf719e26">1. api doc</a></li>
</ul>
</div>
</div>

<div id="outline-container-orgf719e26" class="outline-2">
<h2 id="orgf719e26"><span class="section-number-2">1</span> api doc</h2>
<div class="outline-text-2" id="text-1">
<p>
文件信誉与域名信誉 api v2 文档说明
</p>

<ul class="org-ul">
<li><p>
文件信誉
</p>

<p>
/api/v2/file?apikey=manue1sec&amp;param=3b405c30a7028e05742d0fbf0961e6b2&amp;timestamp=1525682461
</p>

<div class="org-center">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">参数</th>
<th scope="col" class="org-left">参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">apikey</td>
<td class="org-left">token认证信息</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">param</td>
<td class="org-left">样本MD5、sha1</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">timestamp</td>
<td class="org-left">用户请求当前时间戳,服务的处理最近五分钟请求</td>
</tr>
</tbody>
</table>
</div>

<p>
返回状态码同api v1
</p></li>

<li><p>
域名信誉
</p>

<p>
/api/v2/compromise?apikey=manue1sec&amp;param=daghfgdgab.lvdp.net&amp;timestamp=1525682825
</p>

<div class="org-center">
<p>
      
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">参数</th>
<th scope="col" class="org-left">参数说明</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">apikey</td>
<td class="org-left">token认证信息</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">param</td>
<td class="org-left">域名、CC主机、</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">timestamp</td>
<td class="org-left">用户请求当前时间戳,服务的处理最近五分钟请求</td>
</tr>
</tbody>
</table>
</div>

<p>
返回状态码同api v1
</p></li>
</ul>
</div>
</div>

</div>
</div>]]></description>
      <pubDate>2018-06-03</pubDate>
      <guid>http://www.manue1.site/wiki/untitled/</guid>
    </item>
    <item>
      <title>Untitled</title>
      <link>http://www.manue1.site/wiki/untitled/</link>
      <description><![CDATA[<div>
<div class="post">
<h1>Untitled</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#orgc903dd0">1. Mongo 使用笔记</a>
<ul>
<li><a href="#org9f73abc">1.1. Mongo集群安装</a></li>
<li><a href="#orga74314d">1.2. 常用命令</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div id="outline-container-orgc903dd0" class="outline-2">
<h2 id="orgc903dd0"><span class="section-number-2">1</span> Mongo 使用笔记</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-org9f73abc" class="outline-3">
<h3 id="org9f73abc"><span class="section-number-3">1.1</span> Mongo集群安装</h3>
</div>
<div id="outline-container-orga74314d" class="outline-3">
<h3 id="orga74314d"><span class="section-number-3">1.2</span> 常用命令</h3>
<div class="outline-text-3" id="text-1-2">
<ol class="org-ol">
<li><p>
创建索引
</p>

<p>
db.smrt.ensureIndex({"ip":1})
</p></li>
</ol>

<p>
2.聚合出字段种类
</p>

<p>
db.smrt.distinct("tags")
</p>

<p>
db.all<sub>iocs.find</sub>({"malicious<sub>family</sub>":{$size:3}})
</p>
<ol class="org-ol">
<li>db.ip<sub>history</sub><sub>v1.find</sub>({"insert<sub>time</sub>":{"$gte":1496357774,"$lte":1496357775}})
db.ip<sub>history</sub><sub>v1.find</sub>({"insert<sub>time</sub>":{"$gte":1498037117,"$lte":1498037119}})
db.ip<sub>history</sub><sub>v1.find</sub>({"history":{"$elemMatch":{"source":"emergingthreats.net"}}})
db.ip<sub>history</sub><sub>v1.remove</sub>({"history":{"$elemMatch":{"attack<sub>time</sub>":{'$gte':'2016-05-11T15:29:21','$lte':'2017-07-11T15:29:21'}}}})</li>
</ol>


<p>
db.ip<sub>history</sub><sub>v1.find</sub>({"history":{"$elemMatch":{"insertime":{"$gte":"1509840000","$lte":"1509926400"}}}})
</p>
</div>
</div>
</div>

</div>
</div>]]></description>
      <pubDate>2018-06-03</pubDate>
      <guid>http://www.manue1.site/wiki/untitled/</guid>
    </item>
    <item>
      <title>Untitled</title>
      <link>http://www.manue1.site/wiki/untitled/</link>
      <description><![CDATA[<div>
<div class="post">
<h1>Untitled</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#org9798d2f">1. note-Mysql</a>
<ul>
<li><a href="#org4ab4785">1.1. install mysql</a></li>
<li><a href="#org674f044">1.2. commands</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div id="outline-container-org9798d2f" class="outline-2">
<h2 id="org9798d2f"><span class="section-number-2">1</span> note-Mysql</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-org4ab4785" class="outline-3">
<h3 id="org4ab4785"><span class="section-number-3">1.1</span> install mysql</h3>
<div class="outline-text-3" id="text-1-1">
<ol class="org-ol">
<li><p>
检查系统中是否已经安装了 mysql
</p>

<p>
sudo netstat -tap | grep mysql
</p>

<p>
没有反应 说明没有安装
</p></li>

<li><p>
安装 mysql
</p>

<p>
sudo apt-get install mysql-server mysql-client
</p></li>

<li><p>
测试安装
</p>

<p>
sudo netstat -tap | grep mysql
</p>

<p>
mysql -u root -p 
</p></li>

<li><p>
mysql 简单管理
</p>

<p>
启动 MySQL 服务：
</p>

<p>
sudo service mysql start
</p>

<p>
停止 MySQL 服务：
</p>

<p>
sudo stop mysql
</p>

<p>
修改 MySQL 的管理员密码：
</p>

<p>
sudo mysqladmin -u root password newpassword
</p></li>
</ol>


<ol class="org-ol">
<li><p>
mysql 目录结构
</p>

<p>
数据库存放目录：               <i>var/lib/mysql</i>
</p>

<p>
相关配置文件存放目录：          /usr/share/mysql
</p>

<p>
相关命令存放目录：             /usr/bin(mysqladmin mysqldump 等命令)
</p>

<p>
启动脚步存放目录：            <i>etc/rc.d/init.d</i>
</p></li>
</ol>


<ol class="org-ol">
<li>常见问题

<ul class="org-ul">
<li><p>
删除不掉数据库
</p>

<p>
mysql&gt; drop database elvdou;
</p>
<pre class="example">
ERROR 1010 (HY000): Error dropping database (can't rmdir './elvdou', errno: 39)
</pre></li>
<li><p>
设置远程访问
</p>
<p class="verse">
正常情况下,mysql占用的3306端口只是在127.0.0.1上监听，<br />
拒绝了其他IP的访问(通过netstat可以查看到)。<br />
取消本地监听需要修改 my.cnf 文件：<br />
sudo vi /etc/mysql/my.cnf<br />
bind-address = 127.0.0.1 //找到此内容并且注释<br />
</p></li>
<li><p>
mysql 大小写敏感问题
</p>

<p>
sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf 
</p>

<p>
在[mysqld]节下 添加
</p>
<pre class="example">
lower_case_table_names=1 
</pre>

<p>
备注：为 0 时大小写敏感，为 1 时大小写不敏感，默认为 0
</p></li>
</ul></li>
</ol>
</div>
</div>

<div id="outline-container-org674f044" class="outline-3">
<h3 id="org674f044"><span class="section-number-3">1.2</span> commands</h3>
<div class="outline-text-3" id="text-1-2">
<ol class="org-ol">
<li><p>
终端登录
</p>

<p>
密码转义符\!
</p>

<p>
mysql -u manue1 -p qweO1\!k -h 8.8.8.8
</p></li>

<li></li>
</ol>
</div>
</div>
</div>

</div>
</div>]]></description>
      <pubDate>2018-06-03</pubDate>
      <guid>http://www.manue1.site/wiki/untitled/</guid>
    </item>
    <item>
      <title>Untitled</title>
      <link>http://www.manue1.site/wiki/untitled/</link>
      <description><![CDATA[<div>
<div class="post">
<h1>Untitled</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#orgc36a5d2">1. Ambari use</a></li>
</ul>
</div>
</div>
<div id="outline-container-orgc36a5d2" class="outline-2">
<h2 id="orgc36a5d2"><span class="section-number-2">1</span> Ambari use</h2>
<div class="outline-text-2" id="text-1">
<p>
Ambari是Apache下的一个顶级项目，为了创建、管理、监视Hadoop集群(Hive,Hbase,Sqoop,Zookeeper,Spark)，Ambari就是为了让Hadoop以及相关的大数据软件更容易使用的一个工具
</p>

<p>
Ambari自身是一个分布式框架的软件，由Ambari Service 和 Ambari Agent组成. 简单来说，用户通过Ambar Service通知Ambar Agent 安装相应的软件.
</p>

<p>
Agent会定时发送各个机器每个软件模块的状态给Ambari Server,最终这些状态信息会呈现在Ambari的GUI
</p>

<p>
参考:<a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-bigdata-ambari/index.html">https://www.ibm.com/developerworks/cn/opensource/os-cn-bigdata-ambari/index.html</a>
</p>
</div>
</div>

</div>
</div>]]></description>
      <pubDate>2018-06-03</pubDate>
      <guid>http://www.manue1.site/wiki/untitled/</guid>
    </item>
    <item>
      <title>Untitled</title>
      <link>http://www.manue1.site/wiki/untitled/</link>
      <description><![CDATA[<div>
<div class="post">
<h1>Untitled</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#org663f89b">1. 严蔚敏数据结构Video</a>
<ul>
<li><a href="#org91824ba">1.1. 绪论</a></li>
<li><a href="#org4412475">1.2. 线性表</a></li>
</ul>
</li>
<li><a href="#org538ffde">2. 数据结构与算法分析(Java语言描述)</a>
<ul>
<li><a href="#orgd920e85">2.1. 1.引论</a></li>
<li><a href="#org4f043a2">2.2. 2.算法分析</a></li>
<li><a href="#org239d0b5">2.3. 3.表、栈和队列</a></li>
<li><a href="#org532b34a">2.4. 4.树</a></li>
</ul>
</li>
<li><a href="#org1f3a2d0">3. Introduction to Algorithms</a>
<ul>
<li><a href="#orgd8aa6e4">3.1. 基础知识</a>
<ul>
<li><a href="#org795b9cd">3.1.1. 算法基础</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#orgc260585">4. Leetcode</a>
<ul>
<li><a href="#org412fbf0">4.1. LeetCode 3 &#x2014; Longest Substring Without Repeating Characters</a></li>
<li><a href="#org1755fba">4.2. LeetCode 4 &#x2014; Median of Two Sorted Arrays</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div id="outline-container-org663f89b" class="outline-2">
<h2 id="org663f89b"><span class="section-number-2">1</span> 严蔚敏数据结构Video</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-org91824ba" class="outline-3">
<h3 id="org91824ba"><span class="section-number-3">1.1</span> 绪论</h3>
<div class="outline-text-3" id="text-1-1">
<ol class="org-ol">
<li><p>
数据结构范畴 
</p>

<p>
算法 + 数据结构 = 程序设计
</p>

<p>
算法: 对问题怎么处理
</p>

<p>
数据结构：对条件规则,处理结果怎么输入输出
</p></li>

<li>基本概念

<ul class="org-ul">
<li><p>
数据
</p>

<p>
能被计算机处理的，能被计算机操作的对象，随着计算机的发展逐渐扩大，数字，图像，视频，多媒体信息
</p></li>

<li><p>
数据元素
</p>

<p>
数据项是数据结构中讨论的最小单位
</p>

<p>
数据元素是数据项的集合
</p></li>

<li><p>
数据结构
</p>

<p>
带结构的数据元素的集合
</p>

<p>
结构: 数据元素之间的关系
</p>

<p>
数据的逻辑结构可归结为4类: 线性结构、树形结构、图状结构、集合结构
</p>

<p>
数据结构的形式定义: 是一个二元组 Data-Structures = (D,S) D是数据元素上的有限集,S是D上的关系
</p>

<p>
数据的存储结构: 逻辑结构在计算机中的表示，逻辑结构在存储器中的映象
</p>

<p>
逻辑结构表现：数据元素的集合 + 关系的集合
</p>

<blockquote>
<p>
数据元素的映象方法：计算机中表示数据的最小元素是二进制位(bit) 
</p>

<p>
关系的映象方法: 
</p>
<ul class="org-ul">
<li>顺序映象 :以存储位置的相邻表示后继关系 y的存储位置和x的存储位置相差一个常量C</li>
<li>链式映象 :以附加信息(指针)表示后继关系</li>
</ul>
</blockquote></li>

<li><p>
数据类型
</p>

<p>
高级语言中每个变量常量表达式明确数据类型
</p>

<p>
数据类型是值的集合和定义在此集合上的一组操作的总称
</p></li>
<li><p>
抽象数据类型(Abstract Data Type ADT) 
</p>

<p>
是指一个数学模型以及定义在此数学模型上的一组操作
</p>

<p>
ADT两个特征:
</p>

<blockquote>
<ol class="org-ol">
<li><p>
数据抽象
</p>

<p>
用ADT描述程序处理的实体时,强调的是其本质的特征，其所能完成的功能以及和外部用户的接口
</p>

<p>
复数不能直接加减
</p>

<p>
初始化、取复数虚部、相加等方法
</p></li>
<li><p>
数据封装
</p>

<p>
外部用户不关心方法如何实现的
</p></li>
</ol>
</blockquote>

<p>
ADT的表示和实现：借用固有数据类型来表示和实现
</p></li>
</ul></li>
</ol>


<ol class="org-ol">
<li><p>
算法和算法的衡量
</p>

<p>
一个有限常的操作序列
</p>

<p>
算法的五个重要特性
有穷性、确定性、可行性、有输入、有输出
</p></li>
</ol>
</div>
</div>

<div id="outline-container-org4412475" class="outline-3">
<h3 id="org4412475"><span class="section-number-3">1.2</span> 线性表</h3>
<div class="outline-text-3" id="text-1-2">
<p>
线性结构 是一个数据元素的有序(次序)集
</p>

<p>
基本特征：
</p>
<blockquote>
<ol class="org-ol">
<li>唯一一个 第一元素</li>
<li>唯一的 最后元素</li>
<li>唯一的后继</li>
<li>唯一的前继</li>
</ol>
</blockquote>

<ul class="org-ul">
<li>线性表的类型定义
<ol class="org-ol">
<li>抽象数据类型线性表的定义
数据对象、
数据关系</li>
</ol></li>
<li>线性表类型的实现-顺序映象</li>
<li>线性表类型的实现-链式映象</li>
<li>一元多项式的表示</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-org538ffde" class="outline-2">
<h2 id="org538ffde"><span class="section-number-2">2</span> 数据结构与算法分析(Java语言描述)</h2>
<div class="outline-text-2" id="text-2">
</div>
<div id="outline-container-orgd920e85" class="outline-3">
<h3 id="orgd920e85"><span class="section-number-3">2.1</span> 1.引论</h3>
<div class="outline-text-3" id="text-2-1">
<p>
数学、递归、java等基础
如果除去对象的基本类型外,实现方法是相同的，那么我们可以用泛型实现来描述这种基本功能.
泛型、自动装箱/拆箱
泛型static方法 
类型限界 type bound
</p>
</div>
</div>

<div id="outline-container-org4f043a2" class="outline-3">
<h3 id="org4f043a2"><span class="section-number-3">2.2</span> 2.算法分析</h3>
<div class="outline-text-3" id="text-2-2">
<p>
数据读入是一个瓶颈
</p>

<p>
计算运行时间，大O是一个上届，程序可能提前结束，但决不能错后
</p>

<ul class="org-ul">
<li><p>
一般法则:
</p>

<p>
分析的基本策略是从内部向外展开工作的
</p>

<ul class="org-ul">
<li><p>
法则1 for循环
</p>

<p>
一个for循环的运行时间至多是该for循环内部那些语句的运行时间*迭代次数
</p></li>

<li><p>
法则2 嵌套的for循环
</p>

<p>
从里向外分析这些循环。在一组嵌套循环内部的一条语句总的运行时间
</p>

<p>
为该语句的运行时间乘以该组所有的for循环的大小乘积
</p>

<p>
O(N<sup>2</sup>)
</p></li>

<li><p>
法则3 顺序语句
</p>

<p>
将各个语句的运行时间求和即可，意味着最大值就是所得的运行时间
</p></li>

<li><p>
法则4 if/else语句
</p>

<p>
if + else
</p></li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org239d0b5" class="outline-3">
<h3 id="org239d0b5"><span class="section-number-3">2.3</span> 3.表、栈和队列</h3>
<div class="outline-text-3" id="text-2-3">
<p>
最简单和最基本的三种数据结构
</p>

<p>
实际上，每个有意义的程序都将显式的至少使用一种这样的数据结构，
</p>

<p>
栈在程序中总是被间接的用到，不管程序是否做了声明
</p>

<p>
ADT 抽象数据类型 是带有一组操作的一些对象的集合
</p>

<ul class="org-ul">
<li>表ADT list
<ol class="org-ol">
<li><p>
简单数组实现
</p>

<p>
array
</p>

<p>
数组是由固定容量创建的，使用数组的时候需要对表的大小进行评估
</p>

<p>
如果对表做插入和删除操作，特别是对表的前段进行操作，数组就不合适
</p>

<p>
最坏的O(N) 最好的O(1)
</p></li>
<li><p>
简单链表实现
</p>

<p>
linked list
</p>

<p>
为了避免插入和删除的线性开销，需要保证表可以不连续存储
</p>

<p>
链表由一系列节点组成，这些节点不必在内存中相连。
</p>

<p>
每个节点均含有表元素和到后继元素的link链，叫做next链
</p>

<p>
最后一个节点的next链引用null
</p>

<p>
在经典链表中，每个节点只存储到其下一个节点的链，
</p>

<p>
存在指向前驱节点的链，我们称之为双链表
</p>

<p>
LIST接口: 1.ArrayList 2.LinkedList
</p></li>

<li>list adt 两种流行的实现方式

<ol class="org-ol">
<li><p>
ArrayList
</p>

<p>
一种可增长数组的实现，
优点：对get/set方法调用花费常数时间
缺点: 插入/删除 代价昂贵    
</p></li>
<li><p>
Linkedlist
</p>

<p>
双链表的实现
</p>

<p>
优点：插入/删除 开销很小
缺点：get的索引操作 不容易 采用迭代器的方式更高效的取数据 
</p></li>
</ol></li>
</ol></li>
<li><p>
栈ADT stack
</p>

<p>
栈stack是限制插入和删除只能在一个位置的表，该位置是表的末端，叫做栈的顶端（top）
</p>

<p>
栈有时又叫做LIFO表（后进先出）
</p>

<p>
push 进栈
</p>

<p>
pop  出栈
</p></li>
<li><p>
队列ADT queue
</p>

<p>
和栈一样队列也是表，使用队列时，插入在一端进行，删除则在另一端进行。
</p>

<p>
队又叫做FIFO表（先进先出）
</p>

<p>
enqueue：入队  在表的末端(rear)插入元素
</p>

<p>
dequeue：出队  删除在表开头(front)的元素
</p></li>
</ul>
</div>
</div>







<div id="outline-container-org532b34a" class="outline-3">
<h3 id="org532b34a"><span class="section-number-3">2.4</span> 4.树</h3>
<div class="outline-text-3" id="text-2-4">
<p>
根的深度为0，树叶的高度为0
</p>

<ul class="org-ul">
<li>树的遍历: 
<ol class="org-ol">
<li>先序遍历</li>
<li>后序遍历</li>
<li>中序遍历</li>
</ol></li>

<li><p>
二叉树
binary tree 是一棵树，其中每个节点都不能有多于两个的儿子
</p>

<p>
性质：一棵平均二叉树的深度要比节点个数N小的多
</p>

<p>
树节点的声明类似双链表，节点包含element，和leftkk、right引用
</p>

<p>
二叉查找树: 对于树中的每个节点X,它的左子树中所有项的值小于X中的项，而它的右子树中所有项的值大于X中的项
</p></li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org1f3a2d0" class="outline-2">
<h2 id="org1f3a2d0"><span class="section-number-2">3</span> Introduction to Algorithms</h2>
<div class="outline-text-2" id="text-3">
</div>
<div id="outline-container-orgd8aa6e4" class="outline-3">
<h3 id="orgd8aa6e4"><span class="section-number-3">3.1</span> 基础知识</h3>
<div class="outline-text-3" id="text-3-1">
<p>
计算时间是一种有限的资源，存储器中的空间也是一样的,时间或空间方面有效的算法使你能够明智地使用这些资源
</p>
</div>
<div id="outline-container-org795b9cd" class="outline-4">
<h4 id="org795b9cd"><span class="section-number-4">3.1.1</span> 算法基础</h4>
</div>
</div>
</div>
<div id="outline-container-orgc260585" class="outline-2">
<h2 id="orgc260585"><span class="section-number-2">4</span> Leetcode</h2>
<div class="outline-text-2" id="text-4">
</div>
<div id="outline-container-org412fbf0" class="outline-3">
<h3 id="org412fbf0"><span class="section-number-3">4.1</span> LeetCode 3 &#x2014; Longest Substring Without Repeating Characters</h3>
</div>
<div id="outline-container-org1755fba" class="outline-3">
<h3 id="org1755fba"><span class="section-number-3">4.2</span> LeetCode 4 &#x2014; Median of Two Sorted Arrays</h3>
<div class="outline-text-3" id="text-4-2">
<p>
logn 堆排序 归并排序 快速排序
</p>

<p>
n 桶排序</p>
</div>
</div>
</div>

</div>
</div>]]></description>
      <pubDate>2018-06-03</pubDate>
      <guid>http://www.manue1.site/wiki/untitled/</guid>
    </item>
    <item>
      <title>Untitled</title>
      <link>http://www.manue1.site/wiki/untitled/</link>
      <description><![CDATA[<div>
<div class="post">
<h1>Untitled</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#orgf64e625">1. note-elasticsearch-install&amp;config</a>
<ul>
<li><a href="#org5180361">1.1. install</a></li>
<li><a href="#orga94fe8c">1.2. cat command</a></li>
<li><a href="#orgc168c45">1.3. Mapping</a></li>
<li><a href="#orgf835bd7">1.4. CURD</a></li>
<li><a href="#org6d54f3d">1.5. Query</a></li>
<li><a href="#orgdf087e6">1.6. Alias</a></li>
<li><a href="#org5ef16e4">1.7. questions</a>
<ul>
<li><a href="#org10ee755">1.7.1. from szie/scroll/search after</a></li>
<li><a href="#orgb8100fb">1.7.2. es shard 生命周期</a></li>
<li><a href="#org705ae18">1.7.3. 分词</a></li>
<li><a href="#orga7100a1">1.7.4. es node</a></li>
<li><a href="#orgfab579c">1.7.5. es pipeline</a></li>
<li><a href="#orgbe6cab5">1.7.6. es</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<div id="outline-container-orgf64e625" class="outline-2">
<h2 id="orgf64e625"><span class="section-number-2">1</span> note-elasticsearch-install&amp;config</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-org5180361" class="outline-3">
<h3 id="org5180361"><span class="section-number-3">1.1</span> install</h3>
<div class="outline-text-3" id="text-1-1">
<p>
安装环境: VMware12: 三台 ubuntu 14.04 内存 1g
</p>
<ol class="org-ol">
<li>download es
<a href="https://www.elastic.co/downloads/elasticsearch">https://www.elastic.co/downloads/elasticsearch</a></li>
<li>install java 8</li>
<li>vim elasticsearch.yml
访问地址修改:
network.host : 192.168.67.128
http.port:9200</li>
<li>sudo vi /etc/sysctl.conf
 kernel.pid<sub>max</sub>=999999
 kernel.thread-max=999999
 vm.max<sub>map</sub><sub>count</sub>=999999
 fs.file-max=999999
sysctl -a|grep vm.max<sub>map</sub><sub>count</sub></li>
<li>ulimit -Hn 
/etc/security/limits.conf 配置修改为 65536  重启服务器</li>
</ol>
</div>
</div>

<div id="outline-container-orga94fe8c" class="outline-3">
<h3 id="orga94fe8c"><span class="section-number-3">1.2</span> cat command</h3>
<div class="outline-text-3" id="text-1-2">
<p>
vim  /etc/security/limits.conf
vim   /etc/security/limits.d/def.conf
</p>

<p>
sudo netstat -anp |grep 9200
htop
show python
curl localhost:9200/<sub>cat</sub>/shards/?v |grep -v STARTED |less
curl -XGET 'localhost:9200/<sub>cat</sub>/recovery/webasset<sub>scan</sub>?v'
</p>

<p>
ES 常用操作命令总结：
1.索引状态
curl localhost:9200/<sub>cat</sub>/indices?v
2.文件描述符
curl localhost:9200/<sub>nodes</sub>/stats/process?pretty | less
3.集群健康
curl localhost:9200/<sub>cluster</sub>/health?pretty | less
curl 'localhost:9200/<sub>cluster</sub>/health?level=indices&amp;pretty' | less
curl localhost:9200/<sub>cat</sub>/health?v| less
</p>

<p>
curl 'localhost:9200/<sub>cat</sub>/allocation?v'
4.分片状态
curl localhost:9200/<sub>cat</sub>/shards/formal<sub>webasset</sub><sub>scan</sub>?v
5.当前任务
curl localhost:9200/<sub>tasks</sub>?pretty | less
6.查看别名
curl localhost:9200/webasset*/<sub>alias</sub>?pretty |less
7.查看 relocate 进度
curl -XGET 'localhost:9200/<sub>cat</sub>/recovery/ipasset<sub>seer4</sub>?v'
8.优化（慎用，会消耗全部可用资源，尤其是磁盘 io）
curl -XPOST 'localhost:9200/threat<sub>ip2</sub>/<sub>optimize</sub>?max<sub>num</sub><sub>segments</sub>=3&amp;pretty'
9.查看 segment
curl localhost:9200/<sub>cat</sub>/segments/ipasset<sub>seer4</sub>?v
</p>

<p>
新建索引
curl -XPUT 'localhost:9200/index<sub>name</sub>/?pretty' -d '{"settings":{"number<sub>of</sub><sub>replicas</sub>":0}}'
curl -XPOST localhost:9200/index<sub>name</sub>/<sub>mapping</sub>/type<sub>name</sub>?pretty -d @mapping<sub>file</sub>
动态改副本数量
curl -XPUT 'localhost:9200/index<sub>name</sub>/<sub>settings</sub>?pretty' -d '{"number<sub>of</sub><sub>replicas</sub>":1}'
设置别名
curl -XPUT 'localhost:9200/index<sub>name</sub>/<sub>alias</sub>/alias<sub>name</sub>?pretty'
修改别名
curl -XPOST 'localhost:9200/<sub>aliases</sub>?pretty' -d '{"actions":[{"remove":{"index":"webasset<sub>subdomain</sub><sub>v2</sub>","alias":"formal<sub>webasset</sub><sub>subdomain</sub>"}},{"add":{"index":"webasset<sub>subdomain</sub><sub>v1</sub>","alias":"formal<sub>webasset</sub><sub>subdomain</sub>"}}]}'
</p>

<ol class="org-ol">
<li>允许自动分配分片(alloctattion disable  关掉) 重启 es 前需要关掉
curl -XPUT '10.24.45.94:9200/<sub>settings</sub>' -d '{
  "index.routing.allocation.disable<sub>allocation</sub>": false
}'</li>
<li>curl -XPUT 10.24.45.94:9200/<sub>cluster</sub>/settings -d '
{
    "transient" : {
        "cluster.routing.allocation.enable": true
    }
}'</li>
<li>最大恢复</li>
</ol>
<p>
curl -XPUT localhost:9200/<sub>cluster</sub>/settings -d '{
     "transient" : {
         "indices.recovery.max<sub>bytes</sub><sub>per</sub><sub>sec</sub>" : 80000000
     }
 }'
</p>
<ol class="org-ol">
<li>拉取数据后挂掉 先删除任务 (shard 重路由之前可以先尝试)
curl -XDELETE 10.24.45.94:9200/<sub>search</sub>/scroll/<sub>all</sub></li>
<li>reroute
curl -XPOST '10.24.45.94:9200/<sub>cluster</sub>/reroute' -d @reroute.mapping</li>
<li></li>
</ol>
</div>
</div>
<div id="outline-container-orgc168c45" class="outline-3">
<h3 id="orgc168c45"><span class="section-number-3">1.3</span> Mapping</h3>
<div class="outline-text-3" id="text-1-3">
<ol class="org-ol">
<li>建立索引
curl -XPUT 'localhost:9200/threat<sub>ip</sub><sub>history</sub>/?pretty' -d{"settings":{"number<sub>of</sub><sub>shards</sub>":20}}
curl -XPUT '10.200.1.72:9200/ipasset<sub>seer</sub><sub>lower</sub>/<sub>settings</sub>'  -d {"number<sub>of</sub><sub>replicas</sub>":1}</li>
<li><p>
设置 mapping 
curl -XPOST 'localhost:9200/threat<sub>ip</sub><sub>history</sub>/<sub>mapping</sub>/ipv4?pretty' -d @mapping<sub>file</sub> 
</p>

<p>
mapping 存放到文件内
</p>
<div class="org-src-container">
<pre class="src src-python">
{
  "ipv4": {
      "dynamic_templates": [
          {
              "notanalyzed": {
                  "mapping": {
                      "index": "not_analyzed",
                      "type": "string"
                  },
                  "match": "*",
                  "match_mapping_type": "string"
              }
          }
      ],
      "properties": {
          "activity": {
              "include_in_parent": true,
              "properties": {
                  "threat_type": {
                      "index": "not_analyzed",
                      "type": "string"
                  },
                  "update_time": {
                      "format": "YYYY-MM-dd'T'HH:mm:ss",
                      "type": "date"
                  }
              },
              "type": "nested"
          },
          "ip": {
              "fields": {
                  "raw": {
                      "type": "ip"
                  }
              },
              "type": "string"
          }
      }
  }
}
</pre>
</div></li>
<li>删除索引
curl -XDELETE localhost:9200/index<sub>name</sub></li>
</ol>
</div>
</div>

<div id="outline-container-orgf835bd7" class="outline-3">
<h3 id="orgf835bd7"><span class="section-number-3">1.4</span> CURD</h3>
<div class="outline-text-3" id="text-1-4">
<ol class="org-ol">
<li>添加一条记录
curl -XPUT 'http://localhost:9200/twitter/tweet/1' -d  '{<sub>source</sub> 内容}'</li>
<li>删除一条记录
curl -XDELETE 'http://localhost:9200/twitter/tweet/1'</li>
</ol>
</div>
</div>
<div id="outline-container-org6d54f3d" class="outline-3">
<h3 id="org6d54f3d"><span class="section-number-3">1.5</span> Query</h3>
<div class="outline-text-3" id="text-1-5">
<ol class="org-ol">
<li><p>
基本查询
</p>

<p>
curl -XGET 'http://localhost:9200/ipasset<sub>seer4</sub>/asset<sub>from</sub><sub>seer</sub>/<sub>search</sub>?pretty&amp;q=ip:210.186.226.178'
</p>

<p>
curl -XGET  'localhost:9200/webasset<sub>whois3</sub>/whois<sub>info</sub>/<sub>search</sub>?pretty&amp;q=<sub>id</sub>:PERSONALLICENCECOURSES.COM'
</p></li>
<li><p>
DSL 查询
1.query bool must/filter match/term
</p>
<pre class="example">

{
  "query": { 
    "bool": { 
      "must": [
        { "match": { "title":   "Search"        }}, 
        { "match": { "content": "Elasticsearch" }}  
      ],
      "filter": [ 
        { "term":  { "status": "published" }}, 
        { "range": { "publish_date": { "gte": "2015-01-01" }}} 
      ]
    }
  }
}

</pre>
<p>
2.query/sort
</p>
<pre class="example">
{
       "query": {
           "bool": {
               "must": [
                   {
                       "term": {
                           "ip.raw": "210.186.226.178"
                       }
                   }
               ],
               "must_not": [ ],
               "should": [ ]
           }
       },
       "sort": {
         "started": "desc"
       },
   }
</pre></li>
</ol>
</div>
</div>
<div id="outline-container-orgdf087e6" class="outline-3">
<h3 id="orgdf087e6"><span class="section-number-3">1.6</span> Alias</h3>
<div class="outline-text-3" id="text-1-6">
<ol class="org-ol">
<li>创建 alias
curl -XPOST 'localhost:9200/<sub>aliases</sub>' -d '{"actions":[{"add":{"index" : "vulnerability<sub>data</sub><sub>v4</sub>","alias" : "formal<sub>vulnerability</sub><sub>data</sub>"}}]}'</li>
<li>删除 alias
curl -XPOST 'localhost:9200/<sub>aliases</sub>' -d '{"actions":[{"remove":{"index" : "vulnerability<sub>data</sub><sub>v4</sub>","alias" : "formal<sub>vulnerability</sub><sub>data</sub>"}}]}'</li>
<li><p>
创建映射多个索引:
</p>
<pre class="example">
curl -XPOST 'http://localhost:9200/_aliases'-d '  
{  
    "actions" : [  
        { "add" : { "index" : "test1","alias" : "alias1" } },  
        { "add" : { "index" : "test2","alias" : "alias1" } }  
    ]  
}'  
</pre></li>
</ol>
</div>
</div>
<div id="outline-container-org5ef16e4" class="outline-3">
<h3 id="org5ef16e4"><span class="section-number-3">1.7</span> questions</h3>
<div class="outline-text-3" id="text-1-7">
</div>
<div id="outline-container-org10ee755" class="outline-4">
<h4 id="org10ee755"><span class="section-number-4">1.7.1</span> from szie/scroll/search after</h4>
<div class="outline-text-4" id="text-1-7-1">
<p>
<a href="http://www.jianshu.com/p/91d03b16af77">http://www.jianshu.com/p/91d03b16af77</a>
</p>

<p>
在使用关系型数据库中，我们被告知要注意甚至被明确禁止使用深度分页，同理，在 Elasticsearch 中，也应该尽量避免使用深度分页
</p>

<p>
深度分页的问题:CUP、内存、IO、网络带宽问题  10个shard*一亿条数据的doc<sub>id</sub>
</p>

<ul class="org-ul">
<li><p>
from size
</p>

<p>
100+10、110+10&#x2026;..10000+10 越往后请求的越多
</p></li>

<li><p>
scroll:
</p>

<p>
query fetch merge
</p>

<p>
查询结果缓存,每次fetch size*shard文档 merge输出
</p>

<p>
scroll不适合做实时查询: 1.初始化结果缓存成快照 2.fetch数据，操作数据
</p>

<p>
search<sub>type</sub>。赋值为scan，表示采用 Scroll-Scan 的方式遍历，同时告诉 Elasticsearch 搜索结果不需要排序
</p>

<p>
size 控制的是每个分片的返回的数据量而不是整个请求返回的数据量。
</p></li>

<li><p>
search after
</p>

<p>
1.必须先要指定排序,记住坐标
</p>

<p>
2.从任意一个位置 带上search<sub>after</sub>=lastEmittedDocFieldValue 偏移量查数据
</p>

<p>
如果我要做非常多页的查询时，最起码search after是一个常量查询延迟和开销，并无什么副作用。
</p>

<p>
无论去到多少页，请求始终就是请求了size个docs,是个常量 
</p>

<p>
业务折衷一：禁止跳页查询 只提供下一页
</p></li>
</ul>
</div>
</div>
<div id="outline-container-orgb8100fb" class="outline-4">
<h4 id="orgb8100fb"><span class="section-number-4">1.7.2</span> es shard 生命周期</h4>
<div class="outline-text-4" id="text-1-7-2">
<p>
<a href="http://lxwei.github.io/posts/Elasticsearch-Shard-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html">http://lxwei.github.io/posts/Elasticsearch-Shard-生命周期.html</a>
</p>
<ul class="org-ul">
<li><p>
动态索引 
三个关键的索引结构：倒排列表、临时索引、已删除列表 
</p>

<ul class="org-ul">
<li>临时索引
临时索引是在内存中实时建立的倒排索引，结果与倒排列表一样，
只是存在于内存中，当有新文档时，实时解析文档并加到这个临时索引中</li>
<li>已删除列表
已删除列表存储已被删除的文档的文档ID
一个文档被修改，搜索引擎一般删除旧文档，新建新文档,间接实现更新,
这么做的原因主要是索引文件存储在磁盘文件，写磁盘不方便</li>
<li>倒排列表
倒排索引是已经建好的索引结果，倒排列表存在磁盘文件中，单词词典在内存中</li>
</ul>

<p>
搜索操作：同时到内存和磁盘中查找，合并，然后利用已删除列表过滤文档
</p></li>
<li><p>
es动态更新
segment是lucence定义的索引段，一个索引内包含多个，segment对外提供搜索服务
</p>

<p>
新文档&#x2013;&gt;内存的buffer内&#x2013;&gt;写到磁盘生成新的segment，对外服务 同时清空buffer
</p>

<p>
要频繁的写入磁盘十分消耗资源,es先将文档写到filesystem cache内，此时就能被搜索到了(linux下文件句柄要调整)
</p>

<p>
必须调用fsync将segment刷到磁盘上，才能保证数据不丢失。
</p></li>

<li><p>
refresh/flush
</p>

<p>
refresh是轻量级的写和打开一个新segment的操作
</p>

<p>
Elasticsearch中，执行commit操作并删除translog的操作叫flush
</p></li>

<li><p>
segment merge
</p>

<p>
如果不停的产生新的segment，Elasticsearch中很快就会段爆炸，
每个段都要消耗文件描述符、内存、CPU 周期，且每个search请求都需要遍历所有的segment，会造成搜索操作很慢。
</p>

<p>
_optimize?max<sub>num</sub><sub>segments</sub>=1 一个segment情况下查询要快些，但是得控制大小，
</p></li>
</ul>
</div>
</div>

<div id="outline-container-org705ae18" class="outline-4">
<h4 id="org705ae18"><span class="section-number-4">1.7.3</span> 分词</h4>
</div>
<div id="outline-container-orga7100a1" class="outline-4">
<h4 id="orga7100a1"><span class="section-number-4">1.7.4</span> es node</h4>
<div class="outline-text-4" id="text-1-7-4">
<ul class="org-ul">
<li>data node 上
http.enabled: false，同时也不要安装head, bigdesk, marvel等监控 插件
http功能可以在非数据节点服务器上开启
一台服务器上最好只部署一个Node</li>
<li>避免脑裂现象
<ol class="org-ol">
<li><p>
discovery.zen.minimum<sub>master</sub><sub>nodes</sub> N/2+1
</p>

<p>
要选举一个Master需要多少了候选节点，默认为1
3节点的集群 3/2+1 = 2(向下取整)
</p></li>
<li><p>
discovery.zen.ping.timeout
</p>

<p>
等待ping响应的超时时间，默认值是3秒。如果网络缓慢或拥塞，建议略微调大这个值
</p></li>
</ol></li>
</ul>
</div>
</div>
<div id="outline-container-orgfab579c" class="outline-4">
<h4 id="orgfab579c"><span class="section-number-4">1.7.5</span> es pipeline</h4>
<div class="outline-text-4" id="text-1-7-5">
<p>
<a href="https://www.felayman.com/articles/2017/11/24/1511527532643.html#b3_solo_h4_22">https://www.felayman.com/articles/2017/11/24/1511527532643.html#b3_solo_h4_22</a>
</p>
</div>
</div>
<div id="outline-container-orgbe6cab5" class="outline-4">
<h4 id="orgbe6cab5"><span class="section-number-4">1.7.6</span> es</h4>
<div class="outline-text-4" id="text-1-7-6">
<p>
<a href="https://blog.csdn.net/donghaixiaolongwang/article/category/6747676">https://blog.csdn.net/donghaixiaolongwang/article/category/6747676</a>
</p>

<p>
Elasticsearch之四种查询类型和搜索原理</p>
</div>
</div>
</div>
</div>

</div>
</div>]]></description>
      <pubDate>2018-06-03</pubDate>
      <guid>http://www.manue1.site/wiki/untitled/</guid>
    </item>
    <item>
      <title>Untitled</title>
      <link>http://www.manue1.site/wiki/untitled/</link>
      <description><![CDATA[<div>
<div class="post">
<h1>Untitled</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#org8669895">1. note-emacs</a>
<ul>
<li><a href="#org110f916">1.1. emacs tutorial</a></li>
<li><a href="#org249436e">1.2. common shortcuts</a></li>
<li><a href="#org15ea64b">1.3. emacs lisp</a>
<ul>
<li><a href="#org3b54165">1.3.1. blog</a></li>
<li><a href="#org9797740">1.3.2. casting spels emacs</a></li>
<li><a href="#org07f9607">1.3.3. code</a></li>
</ul>
</li>
<li><a href="#orge39c48c">1.4. orgmode</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div id="outline-container-org8669895" class="outline-2">
<h2 id="org8669895"><span class="section-number-2">1</span> note-emacs</h2>
<div class="outline-text-2" id="text-1">
<p>
the learning environment is mac 
</p>
</div>
<div id="outline-container-org110f916" class="outline-3">
<h3 id="org110f916"><span class="section-number-3">1.1</span> emacs tutorial</h3>
<div class="outline-text-3" id="text-1-1">
<p>
use c-h t open tutorial 
</p>

<p>
c - control  M - option
</p>

<p>
c-x c-c  quit emacs
</p>

<p>
c-g      quit current command
</p>

<pre class="example">


                                上一行 C-p
                                     :
                                     :
               向左移 C-b .... 目前光标位置 .... 向右移 C-f
                                     :
                                     :
                                下一行 C-n

</pre>



<p>
c-/ | c-x u     undo 
</p>

<p>
c-_      undo step by step
</p>

<p>
c-k      delete
</p>

<p>
c-x c-f  search file
</p>

<p>
c-x c-s  save file
</p>

<p>
c-x s    save more buffer
</p>

<p>
c-x c-b | c-x b  search buffer
</p>

<p>
c-s     search forwards
</p>

<p>
c-r     search backwards
</p>

<p>
c-h k ()  query shortcut description
</p>

<p>
c-h f ()  describe function
</p>

<p>
c-h a     search for command g
</p>

<p>
M-x linum-mode   show line number
</p>
</div>
</div>
<div id="outline-container-org249436e" class="outline-3">
<h3 id="org249436e"><span class="section-number-3">1.2</span> common shortcuts</h3>
<div class="outline-text-3" id="text-1-2">
<p class="verse">
,bb  next buffer<br />
<br />
,xf  search file<br />
<br />
,xb  search buffer<br />
,kb  kill buffer<br />
<br />
,ov  my overview current buffer<br />
,c&gt;  org do demote<br />
,c&lt;  org do promote<br />
<br />
&lt;s+Tab  add source<br />
&lt;v+Tab  ignore blank line<br />
&lt;q+Tab  add indentation<br />
<br />
F1  org agenda<br />
<br />
F2  add TODO<br />
c-c c-s add start time<br />
c-c c-d add end time<br />
c-c .   add time period<br />
++1d    every day do<br />
c-x a   org agenda list<br />
<br />
c-c | / |-  auto generate form<br />
c-c -       add  horizontal line<br />
<br />
,x0  close the current window<br />
,x1  close othe windows<br />
,x3   ||<br />
,x2   =<br />
, (12345)  switch window<br />
<br />
spc ss create workspace<br />
spc ll search workspace<br />
<br />
<br />
</p>
</div>
</div>

<div id="outline-container-org15ea64b" class="outline-3">
<h3 id="org15ea64b"><span class="section-number-3">1.3</span> emacs lisp</h3>
<div class="outline-text-3" id="text-1-3">
</div>
<div id="outline-container-org3b54165" class="outline-4">
<h4 id="org3b54165"><span class="section-number-4">1.3.1</span> blog</h4>
<div class="outline-text-4" id="text-1-3-1">
<p>
<a href="http://www.woola.net/detail/2016-08-18-elisp.html">http://www.woola.net/detail/2016-08-18-elisp.html</a>
</p>
</div>
</div>
<div id="outline-container-org9797740" class="outline-4">
<h4 id="org9797740"><span class="section-number-4">1.3.2</span> casting spels emacs</h4>
<div class="outline-text-4" id="text-1-3-2">
<p>
a comic book : Emacs Lisp version 
<a href="http://www.lisperati.com/casting-spels-emacs/html/casting-spels-emacs-1.html">http://www.lisperati.com/casting-spels-emacs/html/casting-spels-emacs-1.html</a>
</p>

<p>
Emacs <b>scratch</b> buffer is Lisp interacion : c-x b <b>scratch</b>
</p>


<p>
Emacs tutorial <a href="https://www.gnu.org/software/emacs/tour/">https://www.gnu.org/software/emacs/tour/</a>
</p>


<p>
Emacs manual : <a href="https://www.gnu.org/software/emacs/manual/index.html">https://www.gnu.org/software/emacs/manual/index.html</a>
</p>

<p>
c-x c-e  : evaluable each expression (move the cursor to the end of each expression )
</p>

<p>
M-x top-level : clears out errors
</p>

<p>
M-x ielm  : ELISP&gt;
</p>

<p>
(setq eval-expression-print-length nil) : prevent emacs truncate messages
</p>

<p>
(require 'cl) : the library to make elisp run Common lisp command 
</p>
</div>


<ol class="org-ol">
<li><a id="org6a1f02c"></a>Syntax and Semantic<br />
<div class="outline-text-5" id="text-1-3-2-1">
<p>
any text you give elisp interprater has to be arranged into list ,can be nested into lists of
lists,a list in elisp (bla bla bla (abc abc))
</p>

<p>
elis: interprater uses two modes to read code:  Code mode / Data mode. 
in data mode,you can put anything into your list ;
in Code mode, your list need to be special type of list called a form :
</p>

<pre class="example">

(foo bla bla bla)
  ^          ^
  |          |
command     a form
</pre>
</div>
</li>

<li><a id="orgae42b69"></a>Defining the data for our Game World<br />
<div class="outline-text-5" id="text-1-3-2-2">
<p>
in order to learn some more about forms,examples:
</p>
<pre class="example">
(setq objects '(whiskey-bottle bucket frog chain))

| code mode    | The single quote to 'flip' the compiler into Date mode |                                     |   |   |
|--------------+--------------------------------------------------------+-------------------------------------+---+---|
| setq objects | '                                                      | (whiskey-bottle bucket frog chain)) |   |   |
|--------------+--------------------------------------------------------+-------------------------------------+---+---|

</pre>
<p>
the command sets a variable to a value : the variable is objects and the value is a list 
</p>
</div>
</li>

<li><a id="org9b08fa4"></a>Looking around in our game world<br />
<div class="outline-text-5" id="text-1-3-2-3">
<p>
The word defun means, as you might expect, that we're defining a function
</p>
<pre class="example">
(defun describe-location (location map)
    (second (assoc location map)))
</pre>
<p>
The assoc command does this and then returns the data describing the living-room
</p>

<p>
Then the command second trims out the second item in that list, which is the description of the living-room
</p>
</div>
</li>
</ol>
</div>

<div id="outline-container-org07f9607" class="outline-4">
<h4 id="org07f9607"><span class="section-number-4">1.3.3</span> code</h4>
<div class="outline-text-4" id="text-1-3-3">
<div class="org-src-container">
<pre class="src src-elisp">
(setq objects '(whiskey-bottle bucket frog chain))

(setq object-locations '((whiskey-bottle living-room)
                           (bucket living-room)
                           (chain garden)
                           (frog garden)))

(setq location 'living-room)

(setq map '((living-room (you are in the living room
                of a wizards house - there is a wizard
                snoring loudly on the couch -)
                (west door garden)
                (upstairs stairway attic))
              (garden (you are in a beautiful garden -
                there is a well in front of you -)
                (east door living-room))
              (attic (you are in the attic of the
                wizards house - there is a giant
                welding torch in the corner -)
                (downstairs stairway living-room))))

(defun describe-location (location map)
    (second (assoc location map)))


(describe-location 'living-room map)

(message "hello world")

(defun hello-world (name)
 "say hello to user whose name is XX"
   (message "hello , %s" name))

(hello-world "manue1")

(setq foo "i'm manue1")
(message foo)

</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orge39c48c" class="outline-3">
<h3 id="orge39c48c"><span class="section-number-3">1.4</span> orgmode</h3>
<div class="outline-text-3" id="text-1-4">
<ul class="org-ul">
<li>alt键失灵问题,主要是因为xshell的配置问题
文件&#x2013;&gt;属性&#x2013;&gt;终端&#x2013;&gt;键盘&#x2013;&gt;元(meta)键仿真</li>
<li><a href="http://www.github.com/nanue1">nanue1's github</a>
<ul class="org-ul">
<li>c-c c-l 
创建url</li>
<li>c-c c-o
打开url</li>
</ul></li>
</ul>
</div>
</div>
</div>

</div>
</div>]]></description>
      <pubDate>2018-06-03</pubDate>
      <guid>http://www.manue1.site/wiki/untitled/</guid>
    </item>
    <item>
      <title>Untitled</title>
      <link>http://www.manue1.site/wiki/untitled/</link>
      <description><![CDATA[<div>
<div class="post">
<h1>Untitled</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#orge089eaa">1. git 独奏</a>
<ul>
<li><a href="#orgd585297">1.1. git 初始化</a></li>
<li><a href="#org8cefbf0">1.2. git 暂存区</a></li>
<li><a href="#org0d515a8">1.3. git reset 重置</a></li>
<li><a href="#orgd5b8f7f">1.4. git 检出</a></li>
<li><a href="#orgdb45021">1.5. git 恢复进度</a></li>
<li><a href="#orgc7107bc">1.6. git 基础操作</a></li>
<li><a href="#orgddf8268">1.7. git tools</a></li>
<li><a href="#org7439eb4">1.8. 改变历史</a></li>
<li><a href="#org5d8ba65">1.9. git克隆</a></li>
</ul>
</li>
<li><a href="#org3edf1ab">2. git 和声</a>
<ul>
<li><a href="#org87a56fa">2.1. git 工作协调</a></li>
<li><a href="#org23e9240">2.2. git 冲突解决</a></li>
</ul>
</li>
<li><a href="#org6cd5698">3. common questions</a>
<ul>
<li><a href="#org2c0254d">3.1. git ls-files 乱码问题</a></li>
</ul>
</li>
</ul>
</div>
</div>
<p>
蒋鑫. Git权威指南 机械工业出版社. Kindle 版本. 
</p>
<div id="outline-container-orge089eaa" class="outline-2">
<h2 id="orge089eaa"><span class="section-number-2">1</span> git 独奏</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-orgd585297" class="outline-3">
<h3 id="orgd585297"><span class="section-number-3">1.1</span> git 初始化</h3>
<div class="outline-text-3" id="text-1-1">
<ul class="org-ul">
<li><p>
git init 
</p>

<p>
初始化git项目
</p></li>
<li><p>
.git
</p>

<p>
版本库存放目录
</p></li>
<li>git config
修改配置文件
<ul class="org-ul">
<li><p>
git config -e 
</p>

<p>
修改 <code>.git/config</code>
</p></li>
<li><p>
git config -e &#x2013;global
</p>

<p>
修改 <code>~/.gitconfig</code>
</p></li>
<li><p>
git config -e &#x2013;system
</p>

<p>
修改 <code>/etc/gitconfig</code>
</p></li>
<li><p>
git config &lt;session&gt;.&lt;key&gt;
</p>

<p>
读写配置文件的属性
<code>$GIT_CONF=test.ini git config a.b</code> 来处理其他配置文件
</p></li>
<li>git config &#x2013;global alias.ci "commit -s"
设置别名</li>
</ul></li>
<li>git clone note  note-bak
备份项目</li>
</ul>
</div>
</div>
<div id="outline-container-org8cefbf0" class="outline-3">
<h3 id="org8cefbf0"><span class="section-number-3">1.2</span> git 暂存区</h3>
<div class="outline-text-3" id="text-1-2">

<div class="figure">
<p><img src="http://7xpyfe.com1.z0.glb.clouddn.com/2017101515080826245091.png" alt="2017101515080826245091.png" />
</p>
</div>

<p>
工作区、暂存区、版本库
</p>
<ul class="org-ul">
<li>git status -s</li>
<li>git log &#x2013;pretty=oneline</li>
<li><p>
git add note-git.org 
</p>

<p>
添加到暂存区
</p></li>
<li><p>
git checkout &#x2013; note-git.org
</p>

<p>
暂存区&#x2013;&gt;工作区
</p></li>
<li><p>
git diff 
</p>


<div class="figure">
<p><img src="http://7xpyfe.com1.z0.glb.clouddn.com/20171015150808301278029.png" alt="20171015150808301278029.png" /> 
</p>
</div>

<p>
diff介绍 
</p>

<p>
diff 比较工作区、暂存区、版本库代码
</p>

<p>
git diff 比较工作区和暂存区
</p>

<p>
git diff &#x2013;cached 比较暂存区和HEAD
</p>

<p>
git diff HEAD 比较工作区和HEAD
</p>

<p>
git diff &lt;commit1&gt;&lt;commit2&gt; &#x2013; &lt;paths&gt;  比较不同版本文件的差异
</p></li>
<li><p>
git stash
</p>

<p>
保存进度，暂存状态
</p></li>
</ul>
</div>
</div>
<div id="outline-container-org0d515a8" class="outline-3">
<h3 id="org0d515a8"><span class="section-number-3">1.3</span> git reset 重置</h3>
<div class="outline-text-3" id="text-1-3">
<ol class="org-ol">
<li>git reset HEAD&lt;path&gt;  相当于取消 git add &lt;paths&gt; 操作</li>

<li><p>
git reset &#x2013;hard master@{2}  重置master所有位置为两次改变之前的值
</p>

<p>
&#x2013;soft       只改变引用的指向，不改变暂存区和工作区
</p>

<p>
&#x2013;mixed      更改引用的指向，重置暂存区，不改变工作区
</p></li>

<li>git reset &#x2013;soft HEAD^ 放弃最新的提交</li>
<li>git reset HEAD filename</li>
</ol>
</div>
</div>

<div id="outline-container-orgd5b8f7f" class="outline-3">
<h3 id="orgd5b8f7f"><span class="section-number-3">1.4</span> git 检出</h3>
<div class="outline-text-3" id="text-1-4">
<ul class="org-ul">
<li><p>
git checkout branch<sub>name</sub>
</p>

<p>
git branch -v
</p></li>
<li>git checkout&#x2013;filename  用暂存区的文件覆盖工作区的 取消上次add</li>
</ul>
</div>
</div>
<div id="outline-container-orgdb45021" class="outline-3">
<h3 id="orgdb45021"><span class="section-number-3">1.5</span> git 恢复进度</h3>
<div class="outline-text-3" id="text-1-5">
<ul class="org-ul">
<li><p>
git stash
</p>

<p>
git stash list
</p>

<p>
git stash pop 从最近保持的进度恢复
</p>

<p>
git stash drop 默认删除最新的进度
</p>

<p>
git stash clear 删除所有进度
</p>

<p>
git stash branch &lt;branchname&gt;  基于进度创建分支
</p></li>
</ul>
</div>
</div>

<div id="outline-container-orgc7107bc" class="outline-3">
<h3 id="orgc7107bc"><span class="section-number-3">1.6</span> git 基础操作</h3>
<div class="outline-text-3" id="text-1-6">
<ul class="org-ul">
<li><p>
删除文件
</p>

<p>
git ls-files 查看暂存区文件
</p>

<p>
git rm filename 删除暂存区文件
</p>

<p>
git reset &#x2013;hard HEAD^ 重置上次提交的删除操作
</p>

<p>
git add-u 快速标记操作,下次提交会生效
</p></li>
<li><p>
恢复文件
</p>

<p>
git show HEAD~1:circl.html &gt; circl.html
</p>

<p>
git checkout HEAD~1 &#x2013; circl.html
</p></li>
<li><p>
移动文件
</p>

<p>
git mv a b
</p></li>
<li><p>
选择性添加
</p>

<p>
git add -i 交互窗口
</p></li>
<li><p>
文件忽略
</p>

<p>
在工作目录下添加.gitignore
</p>

<p>
<code>*.pyc</code>
</p>

<p>
git status &#x2013;ignored -s 可以查看哪些文件被忽略了
</p>

<p>
git add -f filename 或略的文件强制更新
</p>

<p>
git commit -a -m  "偷懒了 直接提交 不用 git add"
</p></li>
<li><p>
文件归档
</p>

<p>
git archive -o lastest.zip HEAD  最新归档
</p>

<p>
git archive -o partial.tar HEAD src doc  只归档两个文件夹
</p></li>
</ul>
</div>
</div>

<div id="outline-container-orgddf8268" class="outline-3">
<h3 id="orgddf8268"><span class="section-number-3">1.7</span> git tools</h3>
<div class="outline-text-3" id="text-1-7">
<p>
版本库浏览器能更好看提交关系图
</p>
<ol class="org-ol">
<li>gitk</li>
<li>gitg</li>
<li>qgit</li>
<li>命令行
<ul class="org-ul">
<li><p>
git log 
</p>

<p>
git config &#x2013;global alias.glog "log &#x2013;graph"  使用:git glog &#x2013;oneline
</p></li>
<li><p>
文件追溯
</p>

<p>
git blame filename 逐行显示谁编辑的 追踪bug!
</p></li>
<li><p>
二分查找
</p>

<p>
找到一个好版本和坏版本,在中间版本的master上执行
</p>

<p>
git bisect start
</p></li>
</ul></li>
</ol>
</div>
</div>

<div id="outline-container-org7439eb4" class="outline-3">
<h3 id="org7439eb4"><span class="section-number-3">1.8</span> 改变历史</h3>
<div class="outline-text-3" id="text-1-8">
<ul class="org-ul">
<li><p>
单步悔棋
</p>

<p>
git commit &#x2013;amend  修改commit原因
</p>

<p>
git checkout HEAD^ &#x2013;filepath 还原删除的文件到暂存区
</p></li>
<li><p>
多步悔棋
git reset &#x2013;soft HEAD^^ 后退两个版本到暂存区
</p>

<p>
git commit -m "new reason "
</p></li>
</ul>
</div>
</div>

<div id="outline-container-org5d8ba65" class="outline-3">
<h3 id="org5d8ba65"><span class="section-number-3">1.9</span> git克隆</h3>
<div class="outline-text-3" id="text-1-9">
<ul class="org-ul">
<li><p>
git clone
</p>

<p>
git clone &lt;rep&gt; dir
</p>

<p>
git clone &#x2013;bare &lt;rep&gt; dir
</p>

<p>
git clone &#x2013;mirror &lt;rep&gt; dir
</p></li>
<li>git push</li>
<li>git pull</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org3edf1ab" class="outline-2">
<h2 id="org3edf1ab"><span class="section-number-2">2</span> git 和声</h2>
<div class="outline-text-2" id="text-2">
</div>
<div id="outline-container-org87a56fa" class="outline-3">
<h3 id="org87a56fa"><span class="section-number-3">2.1</span> git 工作协调</h3>
<div class="outline-text-3" id="text-2-1">
<ul class="org-ul">
<li>支持的协议
智能协议: 数据传输过程中有清晰的进度显示,按需传输，传输量小，速度快 (ssh,git,file//)  
哑协议: 创术速度慢，传输进度不可见，不知道什么时候完成数据传输(ftp,rsync)</li>
<li><p>
强制非快进式推送
</p>

<p>
git rev-list HEAD  本地版本库最新提交
</p>

<p>
git ls-remote origin 远程版本库的引用
</p>

<p>
git push 报non-fast-forward updates were rejected 不可以git push -f 强制更新
</p></li>
<li><p>
合并后推送
</p>

<p>
git pull = git fetch + git merge
</p>

<p>
git log &#x2013;graph &#x2013;oneline
</p>

<p>
git push
</p></li>
</ul>
</div>
</div>


<div id="outline-container-org23e9240" class="outline-3">
<h3 id="org23e9240"><span class="section-number-3">2.2</span> git 冲突解决</h3>
<div class="outline-text-3" id="text-2-2">
<p>
git merge
</p>

<ol class="org-ol">
<li><p>
自动合并
</p>

<p>
git fetch
</p>

<p>
git merge refs/remotes/origin/master
</p>

<p>
git push
</p>

<p>
git log -1 -m &#x2013;stat  m参数可以查看合并操作
</p></li>
<li>逻辑冲突
<ul class="org-ul">
<li>修改文件名，其他文件引用了原来的文件名</li>
<li>函数修改了返回值,但其他地方调用的还是原来的返回值函数</li>
</ul></li>
<li><p>
冲突解决
</p>
<ul class="org-ul">
<li><p>
&lt;&lt;&lt;&lt;&lt;&lt;&lt;(七个小于号) 和 <code>=====</code> (七个等于号)
</p>

<p>
当前分支所更改的内容
</p></li>
<li><p>
=======(七个等于号) 和 &gt;&gt;&gt;&gt;&gt;&gt;&gt; (七个大于号)
</p>

<p>
所要合并的版本要更改的内容
</p></li>
</ul>

<p>
git add / git reset
</p></li>
<li>树冲突</li>
<li>合并策略
<ul class="org-ul">
<li>resolve</li>
<li>recursive</li>
</ul></li>
</ol>
</div>
</div>
</div>

<div id="outline-container-org6cd5698" class="outline-2">
<h2 id="org6cd5698"><span class="section-number-2">3</span> <a href="http://mazhuang.org/wiki/git/">common questions</a></h2>
<div class="outline-text-2" id="text-3">
</div>
<div id="outline-container-org2c0254d" class="outline-3">
<h3 id="org2c0254d"><span class="section-number-3">3.1</span> git ls-files 乱码问题</h3>
<div class="outline-text-3" id="text-3-1">
<p>
在 <code>~/.gitconfig</code> 中添加如下内容
</p>
<pre class="example">
[core]
   quotepath = false
[gui]
   encoding = utf-8
[i18n]
   commitencoding = utf-8
[svn]
   pathnameencoding = utf-8
</pre>
</div>
</div>
</div>

</div>
</div>]]></description>
      <pubDate>2018-06-03</pubDate>
      <guid>http://www.manue1.site/wiki/untitled/</guid>
    </item>
    <item>
      <title>Untitled</title>
      <link>http://www.manue1.site/wiki/untitled/</link>
      <description><![CDATA[<div>
<div class="post">
<h1>Untitled</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#org0f0b392">1. Reading List</a>
<ul>
<li><a href="#org0722c6c">1.1. <span class="done DONE">DONE</span> 历史是个什么玩意</a></li>
<li><a href="#orge22e87b">1.2. <span class="done DONE">DONE</span> 番茄工作法</a></li>
<li><a href="#org50887b1">1.3. <span class="done DONE">DONE</span> Spring Boot实战（图灵程序设计丛书）</a></li>
<li><a href="#org5b17c77">1.4. <span class="todo TODO">TODO</span> Daily word</a></li>
<li><a href="#orgc36237f">1.5. <span class="todo TODO">TODO</span> 统计学习方法</a></li>
<li><a href="#org608402b">1.6. <span class="todo TODO">TODO</span> 比特币:一个虚幻而真实的金融世界</a></li>
</ul>
</li>
<li><a href="#orgc78346d">2. Writing List</a>
<ul>
<li><a href="#orga595068">2.1. <span class="todo TODO">TODO</span> Weekly note</a></li>
</ul>
</li>
<li><a href="#org55cee22">3. Body Building</a>
<ul>
<li><a href="#orgdd8718d">3.1. <span class="todo TODO">TODO</span> Weekly fitness</a></li>
<li><a href="#orgde85cd7">3.2. <span class="todo TODO">TODO</span> Early hours</a></li>
</ul>
</li>
<li><a href="#orgcf891a6">4. Common List</a>
<ul>
<li><a href="#org6a3c6b3">4.1. <span class="done DONE">DONE</span> Docker learn &amp; use</a></li>
<li><a href="#orgc598d8c">4.2. <span class="todo SOMEDAY">SOMEDAY</span> wechat python learn</a></li>
<li><a href="#orge11e63e">4.3. <span class="todo SOMEDAY">SOMEDAY</span> 微信小程序开发测试</a></li>
<li><a href="#org2d1d236">4.4. <span class="todo TODO">TODO</span> git 项目管理文章记录</a></li>
<li><a href="#org013ad64">4.5. <span class="todo TODO">TODO</span> docker use</a></li>
<li><a href="#org04af8ca">4.6. <span class="todo TODO">TODO</span> ML learning</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div id="outline-container-org0f0b392" class="outline-2">
<h2 id="org0f0b392"><span class="section-number-2">1</span> Reading List</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-org0722c6c" class="outline-3">
<h3 id="org0722c6c"><span class="section-number-3">1.1</span> <span class="done DONE">DONE</span> 历史是个什么玩意</h3>
<div class="outline-text-3" id="text-1-1">
<ul class="org-ul">
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-02-19 Sun 04:17]</span></span></li>
<li>State "ABORT"      from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-02-19 Sun 04:15]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-02-19 Sun 03:53]</span></span></li>
</ul>
<ul class="org-ul">
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-01-15 Sun 17:12] </span></span> <br />
good</li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-01-14 Sat 22:30]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-01-14 Sat 22:23]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2016-12-02 Fri 16:32]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2016-11-28 Mon 14:00]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2016-11-25 Fri 16:25]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2016-11-24 Thu 10:34]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2016-11-23 Wed 21:19]</span></span></li>
</ul>
<p>
:LAST<sub>REPEAT</sub>: <span class="timestamp-wrapper"><span class="timestamp">[2017-02-19 Sun 04:15]</span></span>
</p>
</div>
</div>

<div id="outline-container-orge22e87b" class="outline-3">
<h3 id="orge22e87b"><span class="section-number-3">1.2</span> <span class="done DONE">DONE</span> 番茄工作法</h3>
<div class="outline-text-3" id="text-1-2">
<ul class="org-ul">
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-02-20 Mon 04:47]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-02-20 Mon 04:45] </span></span> <br />
z</li>
</ul>
<p>
:LAST<sub>REPEAT</sub>: <span class="timestamp-wrapper"><span class="timestamp">[2017-02-20 Mon 04:45]</span></span>
</p>
</div>
</div>

<div id="outline-container-org50887b1" class="outline-3">
<h3 id="org50887b1"><span class="section-number-3">1.3</span> <span class="done DONE">DONE</span> Spring Boot实战（图灵程序设计丛书）</h3>
<div class="outline-text-3" id="text-1-3">
<ul class="org-ul">
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-07-04 Tue 19:34]</span></span></li>

<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-07-04 Tue 19:33]</span></span>
读这本书之前怀着很大的期望值，但读完稍微有点失望，大多都在讲解spring boot在web方向的为服务应用</li>
</ul>
<p>
:LAST<sub>REPEAT</sub>: <span class="timestamp-wrapper"><span class="timestamp">[2017-07-04 Tue 19:33]</span></span>
</p>
</div>
</div>
<div id="outline-container-org5b17c77" class="outline-3">
<h3 id="org5b17c77"><span class="section-number-3">1.4</span> <span class="todo TODO">TODO</span> Daily word</h3>
<div class="outline-text-3" id="text-1-4">
<ul class="org-ul">
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-07-05 Wed 11:49]</span></span></li>
<li>State "UNDO"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-11 Sun 23:57]</span></span></li>
<li>State "UNDO"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-09 Fri 23:26]</span></span></li>
<li>State "UNDO"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-08 Thu 23:42] </span></span> <br />
聚会去了&#x2026;</li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-07 Wed 10:05] </span></span> <br />
手误将之前的gtd记录删除了，重新建了个任务</li>
</ul>
<p>
:LAST<sub>REPEAT</sub>: <span class="timestamp-wrapper"><span class="timestamp">[2017-07-05 Wed 11:49]</span></span>
</p>
<p>
完成百词斩任务
</p>
</div>
</div>

<div id="outline-container-orgc36237f" class="outline-3">
<h3 id="orgc36237f"><span class="section-number-3">1.5</span> <span class="todo TODO">TODO</span> 统计学习方法</h3>
<div class="outline-text-3" id="text-1-5">
<ul class="org-ul">
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-07-05 Wed 11:49]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-07-05 Wed 10:58] </span></span> <br />
更加输入空间和输出空间的不同，预测问题被分为，回归、分类、标识</li>
</ul>
<p>
:LAST<sub>REPEAT</sub>: <span class="timestamp-wrapper"><span class="timestamp">[2017-07-05 Wed 11:49]</span></span>
</p>
</div>
</div>

<div id="outline-container-org608402b" class="outline-3">
<h3 id="org608402b"><span class="section-number-3">1.6</span> <span class="todo TODO">TODO</span> 比特币:一个虚幻而真实的金融世界</h3>
<div class="outline-text-3" id="text-1-6">
<ul class="org-ul">
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-07-18 Tue 11:06] </span></span> <br />
当财产都被先入比特币行业的人挖掘完了,如何再去保证财产的转移,比特币本身就存在大量问题,外加先入为主的局限性,成为未来货币?通用货币??
看不懂</li>
</ul>
<p>
:LAST<sub>REPEAT</sub>: <span class="timestamp-wrapper"><span class="timestamp">[2017-07-18 Tue 11:06]</span></span>
</p>
</div>
</div>
</div>

<div id="outline-container-orgc78346d" class="outline-2">
<h2 id="orgc78346d"><span class="section-number-2">2</span> Writing List</h2>
<div class="outline-text-2" id="text-2">
</div>
<div id="outline-container-orga595068" class="outline-3">
<h3 id="orga595068"><span class="section-number-3">2.1</span> <span class="todo TODO">TODO</span> Weekly note</h3>
<div class="outline-text-3" id="text-2-1">
<ul class="org-ul">
<li>State "UNDO"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-30 Fri 10:30]</span></span></li>
<li>State "UNDO"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-07 Wed 23:44] </span></span> <br />
特殊原因。</li>
</ul>
<p>
:LAST<sub>REPEAT</sub>: <span class="timestamp-wrapper"><span class="timestamp">[2017-06-30 Fri 10:30]</span></span>
</p>
<p>
每周三记录下一周发生的事情
</p>
</div>
</div>
</div>

<div id="outline-container-org55cee22" class="outline-2">
<h2 id="org55cee22"><span class="section-number-2">3</span> Body Building</h2>
<div class="outline-text-2" id="text-3">
</div>
<div id="outline-container-orgdd8718d" class="outline-3">
<h3 id="orgdd8718d"><span class="section-number-3">3.1</span> <span class="todo TODO">TODO</span> Weekly fitness</h3>
<div class="outline-text-3" id="text-3-1">
<ul class="org-ul">
<li>State "ABORT"      from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-07-18 Tue 11:10] </span></span> <br />
轮滑很好玩嘿嘿</li>
<li>State "UNDO"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-30 Fri 10:30]</span></span></li>
<li>State "UNDO"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-11 Sun 23:56] </span></span> <br />
周五晚上写了一通宵的pywx代码的文件传输功能
白天心态爆炸 没去锻炼</li>
</ul>
<p>
:LAST<sub>REPEAT</sub>: <span class="timestamp-wrapper"><span class="timestamp">[2017-07-18 Tue 11:10]</span></span>
</p>
<p>
每周六健身
</p>
</div>
</div>

<div id="outline-container-orgde85cd7" class="outline-3">
<h3 id="orgde85cd7"><span class="section-number-3">3.2</span> <span class="todo TODO">TODO</span> Early hours</h3>
<div class="outline-text-3" id="text-3-2">
<ul class="org-ul">
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-07-05 Wed 11:50]</span></span></li>
<li>State "UNDO"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-07-04 Tue 19:29]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-30 Fri 10:30]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-22 Thu 20:21]</span></span></li>
<li>State "UNDO"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-19 Mon 10:41] </span></span> <br />
下午吃完晚饭回家，看电视看着看着睡着了，晚上想睡就完全没有了睡意，看白鹿原看得心潮澎湃，最近有这么不错的电视剧，居然被那些垃圾快餐剧淹没了。
不能再熬夜看剧了，有这时间还真的不如看看书呢。</li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-11 Sun 23:58] </span></span> <br />
y更没睡</li>
<li>State "UNDO"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-09 Fri 23:26]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-08 Thu 23:43]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-07 Wed 09:59]</span></span></li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-06 Tue 06:53] </span></span> <br />
2017-06-06</li>
<li>State "DONE"       from "TODO"       <span class="timestamp-wrapper"><span class="timestamp">[2017-06-05 Mon 19:22] </span></span> <br />
早睡早起身体好</li>
</ul>
<p>
:LAST<sub>REPEAT</sub>: <span class="timestamp-wrapper"><span class="timestamp">[2017-07-05 Wed 11:50]</span></span>
</p>
<p>
每天晚上12点之前睡，早上6点起床
</p>
</div>
</div>
</div>

<div id="outline-container-orgcf891a6" class="outline-2">
<h2 id="orgcf891a6"><span class="section-number-2">4</span> Common List</h2>
<div class="outline-text-2" id="text-4">
</div>
<div id="outline-container-org6a3c6b3" class="outline-3">
<h3 id="org6a3c6b3"><span class="section-number-3">4.1</span> <span class="done DONE">DONE</span> Docker learn &amp; use</h3>
<div class="outline-text-3" id="text-4-1">
<ul class="org-ul">
<li>State "DONE"       from "SOMEDAY"    <span class="timestamp-wrapper"><span class="timestamp">[2017-06-12 Mon 11:11] </span></span> <br />
感觉现在很多服务docker都存在了，对于第一次使用新的技术的话，最好使用docker
安装报错 配置环境问题 有的时候会浪费我们太多时间</li>
</ul>
</div>
</div>

<div id="outline-container-orgc598d8c" class="outline-3">
<h3 id="orgc598d8c"><span class="section-number-3">4.2</span> <span class="todo SOMEDAY">SOMEDAY</span> wechat python learn</h3>
</div>

<div id="outline-container-orge11e63e" class="outline-3">
<h3 id="orge11e63e"><span class="section-number-3">4.3</span> <span class="todo SOMEDAY">SOMEDAY</span> 微信小程序开发测试</h3>
</div>

<div id="outline-container-org2d1d236" class="outline-3">
<h3 id="org2d1d236"><span class="section-number-3">4.4</span> <span class="todo TODO">TODO</span> git 项目管理文章记录</h3>
<div class="outline-text-3" id="text-4-4">
<p>
X-plan
</p>
</div>
</div>

<div id="outline-container-org013ad64" class="outline-3">
<h3 id="org013ad64"><span class="section-number-3">4.5</span> <span class="todo TODO">TODO</span> docker use</h3>
</div>

<div id="outline-container-org04af8ca" class="outline-3">
<h3 id="org04af8ca"><span class="section-number-3">4.6</span> <span class="todo TODO">TODO</span> ML learning</h3>
</div>
</div>

</div>
</div>]]></description>
      <pubDate>2018-06-03</pubDate>
      <guid>http://www.manue1.site/wiki/untitled/</guid>
    </item>
  </channel>
</rss>